# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ......core.datetime_utils import serialize_datetime
from .document_reference import DocumentReference

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ListDocumentsResponse(pydantic.BaseModel):
    """
    import datetime

    from metriport.resources.medical import (
        CodeableConcept,
        Coding,
        DocumentReference,
        ListDocumentsResponse,
    )

    ListDocumentsResponse(
        documents=[
            DocumentReference(
                id="1.2.543.1.34.1.34.134",
                file_name="CCDA_Diag.xml",
                location="https://fhir.metriport.com/oauth/fhir/Binary/2.16.840.1.113883.3.777.666.5.700009.969696",
                description="Patient Diagnoses",
                status="current",
                indexed=datetime.datetime.fromisoformat(
                    "2019-09-07 15:50:00+00:00",
                ),
                mime_type="application/xml",
                size=17344007,
                type=CodeableConcept(
                    coding=[
                        Coding(
                            system="http://snomed.info/sct",
                            code="62479008",
                            display="Diagnoses",
                        )
                    ],
                ),
            )
        ],
    )
    """

    documents: typing.List[DocumentReference]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
