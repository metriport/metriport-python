# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SupplyDeliveryStatus(str, enum.Enum):
    """
    A code specifying the state of the dispense event.
    """

    IN_PROGRESS = "in-progress"
    COMPLETED = "completed"
    ABANDONED = "abandoned"
    ENTERED_IN_ERROR = "entered-in-error"

    def visit(
        self,
        in_progress: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
        abandoned: typing.Callable[[], T_Result],
        entered_in_error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SupplyDeliveryStatus.IN_PROGRESS:
            return in_progress()
        if self is SupplyDeliveryStatus.COMPLETED:
            return completed()
        if self is SupplyDeliveryStatus.ABANDONED:
            return abandoned()
        if self is SupplyDeliveryStatus.ENTERED_IN_ERROR:
            return entered_in_error()
