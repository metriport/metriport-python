# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class StructureMapGroupTypeMode(str, enum.Enum):
    """
    If this is the default rule set to apply for the source type or this combination of types.
    """

    NONE = "none"
    TYPES = "types"
    TYPE_AND_TYPES = "type-and-types"

    def visit(
        self,
        none: typing.Callable[[], T_Result],
        types: typing.Callable[[], T_Result],
        type_and_types: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is StructureMapGroupTypeMode.NONE:
            return none()
        if self is StructureMapGroupTypeMode.TYPES:
            return types()
        if self is StructureMapGroupTypeMode.TYPE_AND_TYPES:
            return type_and_types()
