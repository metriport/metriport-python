# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SubscriptionChannelType(str, enum.Enum):
    """
    The type of channel to send notifications on.
    """

    REST_HOOK = "rest-hook"
    WEBSOCKET = "websocket"
    EMAIL = "email"
    SMS = "sms"
    MESSAGE = "message"

    def visit(
        self,
        rest_hook: typing.Callable[[], T_Result],
        websocket: typing.Callable[[], T_Result],
        email: typing.Callable[[], T_Result],
        sms: typing.Callable[[], T_Result],
        message: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SubscriptionChannelType.REST_HOOK:
            return rest_hook()
        if self is SubscriptionChannelType.WEBSOCKET:
            return websocket()
        if self is SubscriptionChannelType.EMAIL:
            return email()
        if self is SubscriptionChannelType.SMS:
            return sms()
        if self is SubscriptionChannelType.MESSAGE:
            return message()
