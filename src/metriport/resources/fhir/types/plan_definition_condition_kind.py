# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PlanDefinitionConditionKind(str, enum.Enum):
    """
    The kind of condition.
    """

    APPLICABILITY = "applicability"
    START = "start"
    STOP = "stop"

    def visit(
        self,
        applicability: typing.Callable[[], T_Result],
        start: typing.Callable[[], T_Result],
        stop: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PlanDefinitionConditionKind.APPLICABILITY:
            return applicability()
        if self is PlanDefinitionConditionKind.START:
            return start()
        if self is PlanDefinitionConditionKind.STOP:
            return stop()
