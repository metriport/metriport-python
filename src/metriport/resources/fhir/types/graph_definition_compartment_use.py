# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GraphDefinitionCompartmentUse(str, enum.Enum):
    """
    Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.
    """

    CONDITION = "condition"
    REQUIREMENT = "requirement"

    def visit(self, condition: typing.Callable[[], T_Result], requirement: typing.Callable[[], T_Result]) -> T_Result:
        if self is GraphDefinitionCompartmentUse.CONDITION:
            return condition()
        if self is GraphDefinitionCompartmentUse.REQUIREMENT:
            return requirement()
