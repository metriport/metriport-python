# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AppointmentParticipantStatus(str, enum.Enum):
    """
    Participation status of the actor.
    """

    ACCEPTED = "accepted"
    DECLINED = "declined"
    TENTATIVE = "tentative"
    NEEDS_ACTION = "needs-action"

    def visit(
        self,
        accepted: typing.Callable[[], T_Result],
        declined: typing.Callable[[], T_Result],
        tentative: typing.Callable[[], T_Result],
        needs_action: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AppointmentParticipantStatus.ACCEPTED:
            return accepted()
        if self is AppointmentParticipantStatus.DECLINED:
            return declined()
        if self is AppointmentParticipantStatus.TENTATIVE:
            return tentative()
        if self is AppointmentParticipantStatus.NEEDS_ACTION:
            return needs_action()
