# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OperationOutcomeIssueSeverity(str, enum.Enum):
    """
    Indicates whether the issue indicates a variation from successful processing.
    """

    FATAL = "fatal"
    ERROR = "error"
    WARNING = "warning"
    INFORMATION = "information"

    def visit(
        self,
        fatal: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
        warning: typing.Callable[[], T_Result],
        information: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OperationOutcomeIssueSeverity.FATAL:
            return fatal()
        if self is OperationOutcomeIssueSeverity.ERROR:
            return error()
        if self is OperationOutcomeIssueSeverity.WARNING:
            return warning()
        if self is OperationOutcomeIssueSeverity.INFORMATION:
            return information()
