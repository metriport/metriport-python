# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GraphDefinitionCompartmentRule(str, enum.Enum):
    """
    identical | matching | different | no-rule | custom.
    """

    IDENTICAL = "identical"
    MATCHING = "matching"
    DIFFERENT = "different"
    CUSTOM = "custom"

    def visit(
        self,
        identical: typing.Callable[[], T_Result],
        matching: typing.Callable[[], T_Result],
        different: typing.Callable[[], T_Result],
        custom: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is GraphDefinitionCompartmentRule.IDENTICAL:
            return identical()
        if self is GraphDefinitionCompartmentRule.MATCHING:
            return matching()
        if self is GraphDefinitionCompartmentRule.DIFFERENT:
            return different()
        if self is GraphDefinitionCompartmentRule.CUSTOM:
            return custom()
