# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DeviceMetricCalibrationType(str, enum.Enum):
    """
    Describes the type of the calibration method.
    """

    UNSPECIFIED = "unspecified"
    OFFSET = "offset"
    GAIN = "gain"
    TWO_POINT = "two-point"

    def visit(
        self,
        unspecified: typing.Callable[[], T_Result],
        offset: typing.Callable[[], T_Result],
        gain: typing.Callable[[], T_Result],
        two_point: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DeviceMetricCalibrationType.UNSPECIFIED:
            return unspecified()
        if self is DeviceMetricCalibrationType.OFFSET:
            return offset()
        if self is DeviceMetricCalibrationType.GAIN:
            return gain()
        if self is DeviceMetricCalibrationType.TWO_POINT:
            return two_point()
