# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class IdentifierUse(str, enum.Enum):
    """
    The purpose of this identifier.
    """

    USUAL = "usual"
    OFFICIAL = "official"
    TEMP = "temp"
    SECONDARY = "secondary"
    OLD = "old"

    def visit(
        self,
        usual: typing.Callable[[], T_Result],
        official: typing.Callable[[], T_Result],
        temp: typing.Callable[[], T_Result],
        secondary: typing.Callable[[], T_Result],
        old: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is IdentifierUse.USUAL:
            return usual()
        if self is IdentifierUse.OFFICIAL:
            return official()
        if self is IdentifierUse.TEMP:
            return temp()
        if self is IdentifierUse.SECONDARY:
            return secondary()
        if self is IdentifierUse.OLD:
            return old()
