# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class BotAuditEventTrigger(str, enum.Enum):
    """
    Criteria for creating an AuditEvent as a result of the bot invocation. Possible values are 'always', 'never', 'on-error', or 'on-output'. Default value is 'always'.
    """

    ALWAYS = "always"
    NEVER = "never"
    ON_ERROR = "on-error"
    ON_OUTPUT = "on-output"

    def visit(
        self,
        always: typing.Callable[[], T_Result],
        never: typing.Callable[[], T_Result],
        on_error: typing.Callable[[], T_Result],
        on_output: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is BotAuditEventTrigger.ALWAYS:
            return always()
        if self is BotAuditEventTrigger.NEVER:
            return never()
        if self is BotAuditEventTrigger.ON_ERROR:
            return on_error()
        if self is BotAuditEventTrigger.ON_OUTPUT:
            return on_output()
