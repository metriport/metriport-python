# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ObservationDefinitionPermittedDataTypeItem(str, enum.Enum):
    QUANTITY = "Quantity"
    CODEABLE_CONCEPT = "CodeableConcept"
    STRING = "string"
    BOOLEAN = "boolean"
    INTEGER = "integer"
    RANGE = "Range"
    RATIO = "Ratio"
    SAMPLED_DATA = "SampledData"
    TIME = "time"
    DATE_TIME = "dateTime"
    PERIOD = "Period"

    def visit(
        self,
        quantity: typing.Callable[[], T_Result],
        codeable_concept: typing.Callable[[], T_Result],
        string: typing.Callable[[], T_Result],
        boolean: typing.Callable[[], T_Result],
        integer: typing.Callable[[], T_Result],
        range: typing.Callable[[], T_Result],
        ratio: typing.Callable[[], T_Result],
        sampled_data: typing.Callable[[], T_Result],
        time: typing.Callable[[], T_Result],
        date_time: typing.Callable[[], T_Result],
        period: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ObservationDefinitionPermittedDataTypeItem.QUANTITY:
            return quantity()
        if self is ObservationDefinitionPermittedDataTypeItem.CODEABLE_CONCEPT:
            return codeable_concept()
        if self is ObservationDefinitionPermittedDataTypeItem.STRING:
            return string()
        if self is ObservationDefinitionPermittedDataTypeItem.BOOLEAN:
            return boolean()
        if self is ObservationDefinitionPermittedDataTypeItem.INTEGER:
            return integer()
        if self is ObservationDefinitionPermittedDataTypeItem.RANGE:
            return range()
        if self is ObservationDefinitionPermittedDataTypeItem.RATIO:
            return ratio()
        if self is ObservationDefinitionPermittedDataTypeItem.SAMPLED_DATA:
            return sampled_data()
        if self is ObservationDefinitionPermittedDataTypeItem.TIME:
            return time()
        if self is ObservationDefinitionPermittedDataTypeItem.DATE_TIME:
            return date_time()
        if self is ObservationDefinitionPermittedDataTypeItem.PERIOD:
            return period()
