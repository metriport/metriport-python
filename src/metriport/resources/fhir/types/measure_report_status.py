# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MeasureReportStatus(str, enum.Enum):
    """
    The MeasureReport status. No data will be available until the MeasureReport status is complete.
    """

    COMPLETE = "complete"
    PENDING = "pending"
    ERROR = "error"

    def visit(
        self,
        complete: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MeasureReportStatus.COMPLETE:
            return complete()
        if self is MeasureReportStatus.PENDING:
            return pending()
        if self is MeasureReportStatus.ERROR:
            return error()
