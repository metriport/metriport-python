# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SearchParameterComparatorItem(str, enum.Enum):
    EQ = "eq"
    NE = "ne"
    GT = "gt"
    LT = "lt"
    GE = "ge"
    LE = "le"
    SA = "sa"
    EB = "eb"
    AP = "ap"

    def visit(
        self,
        eq: typing.Callable[[], T_Result],
        ne: typing.Callable[[], T_Result],
        gt: typing.Callable[[], T_Result],
        lt: typing.Callable[[], T_Result],
        ge: typing.Callable[[], T_Result],
        le: typing.Callable[[], T_Result],
        sa: typing.Callable[[], T_Result],
        eb: typing.Callable[[], T_Result],
        ap: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SearchParameterComparatorItem.EQ:
            return eq()
        if self is SearchParameterComparatorItem.NE:
            return ne()
        if self is SearchParameterComparatorItem.GT:
            return gt()
        if self is SearchParameterComparatorItem.LT:
            return lt()
        if self is SearchParameterComparatorItem.GE:
            return ge()
        if self is SearchParameterComparatorItem.LE:
            return le()
        if self is SearchParameterComparatorItem.SA:
            return sa()
        if self is SearchParameterComparatorItem.EB:
            return eb()
        if self is SearchParameterComparatorItem.AP:
            return ap()
