# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class UploadDocumentResponse(pydantic.BaseModel):
    """
    from metriport.medical import UploadDocumentResponse

    UploadDocumentResponse(
        document_reference_id="<DocumentReference-ID-string>",
        upload_url="<url-string>",
    )
    """

    document_reference_id: str = pydantic.Field(
        alias="documentReferenceId", description="The ID of the DocumentReference."
    )
    upload_url: str = pydantic.Field(alias="uploadUrl", description="The URL to use for uploading the document.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
