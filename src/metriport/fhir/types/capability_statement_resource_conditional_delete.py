# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CapabilityStatementResourceConditionalDelete(str, enum.Enum):
    """
    A code that indicates how the server supports conditional delete.
    """

    NOT_SUPPORTED = "not-supported"
    SINGLE = "single"
    MULTIPLE = "multiple"

    def visit(
        self,
        not_supported: typing.Callable[[], T_Result],
        single: typing.Callable[[], T_Result],
        multiple: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CapabilityStatementResourceConditionalDelete.NOT_SUPPORTED:
            return not_supported()
        if self is CapabilityStatementResourceConditionalDelete.SINGLE:
            return single()
        if self is CapabilityStatementResourceConditionalDelete.MULTIPLE:
            return multiple()
