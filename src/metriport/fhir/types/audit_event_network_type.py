# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AuditEventNetworkType(str, enum.Enum):
    """
    An identifier for the type of network access point that originated the audit event.
    """

    ONE = "1"
    TWO = "2"
    THREE = "3"
    FOUR = "4"
    FIVE = "5"

    def visit(
        self,
        one: typing.Callable[[], T_Result],
        two: typing.Callable[[], T_Result],
        three: typing.Callable[[], T_Result],
        four: typing.Callable[[], T_Result],
        five: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AuditEventNetworkType.ONE:
            return one()
        if self is AuditEventNetworkType.TWO:
            return two()
        if self is AuditEventNetworkType.THREE:
            return three()
        if self is AuditEventNetworkType.FOUR:
            return four()
        if self is AuditEventNetworkType.FIVE:
            return five()
