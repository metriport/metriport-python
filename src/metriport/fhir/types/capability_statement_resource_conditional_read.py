# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CapabilityStatementResourceConditionalRead(str, enum.Enum):
    """
    A code that indicates how the server supports conditional read.
    """

    NOT_SUPPORTED = "not-supported"
    MODIFIED_SINCE = "modified-since"
    NOT_MATCH = "not-match"
    FULL_SUPPORT = "full-support"

    def visit(
        self,
        not_supported: typing.Callable[[], T_Result],
        modified_since: typing.Callable[[], T_Result],
        not_match: typing.Callable[[], T_Result],
        full_support: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CapabilityStatementResourceConditionalRead.NOT_SUPPORTED:
            return not_supported()
        if self is CapabilityStatementResourceConditionalRead.MODIFIED_SINCE:
            return modified_since()
        if self is CapabilityStatementResourceConditionalRead.NOT_MATCH:
            return not_match()
        if self is CapabilityStatementResourceConditionalRead.FULL_SUPPORT:
            return full_support()
