# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TestReportOperationResult(str, enum.Enum):
    """
    The result of this operation.
    """

    PASS = "pass"
    SKIP = "skip"
    FAIL = "fail"
    WARNING = "warning"
    ERROR = "error"

    def visit(
        self,
        pass_: typing.Callable[[], T_Result],
        skip: typing.Callable[[], T_Result],
        fail: typing.Callable[[], T_Result],
        warning: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TestReportOperationResult.PASS:
            return pass_()
        if self is TestReportOperationResult.SKIP:
            return skip()
        if self is TestReportOperationResult.FAIL:
            return fail()
        if self is TestReportOperationResult.WARNING:
            return warning()
        if self is TestReportOperationResult.ERROR:
            return error()
