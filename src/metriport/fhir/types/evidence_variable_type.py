# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EvidenceVariableType(str, enum.Enum):
    """
    The type of evidence element, a population, an exposure, or an outcome.
    """

    DICHOTOMOUS = "dichotomous"
    CONTINUOUS = "continuous"
    DESCRIPTIVE = "descriptive"

    def visit(
        self,
        dichotomous: typing.Callable[[], T_Result],
        continuous: typing.Callable[[], T_Result],
        descriptive: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EvidenceVariableType.DICHOTOMOUS:
            return dichotomous()
        if self is EvidenceVariableType.CONTINUOUS:
            return continuous()
        if self is EvidenceVariableType.DESCRIPTIVE:
            return descriptive()
