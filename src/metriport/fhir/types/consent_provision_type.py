# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ConsentProvisionType(str, enum.Enum):
    """
    Action to take - permit or deny - when the rule conditions are met. Not permitted in root rule, required in all nested rules.
    """

    DENY = "deny"
    PERMIT = "permit"

    def visit(self, deny: typing.Callable[[], T_Result], permit: typing.Callable[[], T_Result]) -> T_Result:
        if self is ConsentProvisionType.DENY:
            return deny()
        if self is ConsentProvisionType.PERMIT:
            return permit()
