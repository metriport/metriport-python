# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PlanDefinitionActionGroupingBehavior(str, enum.Enum):
    """
    Defines the grouping behavior for the action and its children.
    """

    VISUAL_GROUP = "visual-group"
    LOGICAL_GROUP = "logical-group"
    SENTENCE_GROUP = "sentence-group"

    def visit(
        self,
        visual_group: typing.Callable[[], T_Result],
        logical_group: typing.Callable[[], T_Result],
        sentence_group: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PlanDefinitionActionGroupingBehavior.VISUAL_GROUP:
            return visual_group()
        if self is PlanDefinitionActionGroupingBehavior.LOGICAL_GROUP:
            return logical_group()
        if self is PlanDefinitionActionGroupingBehavior.SENTENCE_GROUP:
            return sentence_group()
