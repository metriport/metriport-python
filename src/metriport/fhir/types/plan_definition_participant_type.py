# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PlanDefinitionParticipantType(str, enum.Enum):
    """
    The type of participant in the action.
    """

    PATIENT = "patient"
    PRACTITIONER = "practitioner"
    RELATED_PERSON = "related-person"
    DEVICE = "device"

    def visit(
        self,
        patient: typing.Callable[[], T_Result],
        practitioner: typing.Callable[[], T_Result],
        related_person: typing.Callable[[], T_Result],
        device: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PlanDefinitionParticipantType.PATIENT:
            return patient()
        if self is PlanDefinitionParticipantType.PRACTITIONER:
            return practitioner()
        if self is PlanDefinitionParticipantType.RELATED_PERSON:
            return related_person()
        if self is PlanDefinitionParticipantType.DEVICE:
            return device()
