# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ExplanationOfBenefitStatus(str, enum.Enum):
    """
    The status of the resource instance.
    """

    ACTIVE = "active"
    CANCELLED = "cancelled"
    DRAFT = "draft"
    ENTERED_IN_ERROR = "entered-in-error"

    def visit(
        self,
        active: typing.Callable[[], T_Result],
        cancelled: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        entered_in_error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ExplanationOfBenefitStatus.ACTIVE:
            return active()
        if self is ExplanationOfBenefitStatus.CANCELLED:
            return cancelled()
        if self is ExplanationOfBenefitStatus.DRAFT:
            return draft()
        if self is ExplanationOfBenefitStatus.ENTERED_IN_ERROR:
            return entered_in_error()
