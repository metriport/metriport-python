# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ElementDefinitionSlicingRules(str, enum.Enum):
    """
    Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.
    """

    CLOSED = "closed"
    OPEN = "open"
    OPEN_AT_END = "openAtEnd"

    def visit(
        self,
        closed: typing.Callable[[], T_Result],
        open: typing.Callable[[], T_Result],
        open_at_end: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ElementDefinitionSlicingRules.CLOSED:
            return closed()
        if self is ElementDefinitionSlicingRules.OPEN:
            return open()
        if self is ElementDefinitionSlicingRules.OPEN_AT_END:
            return open_at_end()
