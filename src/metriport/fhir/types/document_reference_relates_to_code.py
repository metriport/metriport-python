# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DocumentReferenceRelatesToCode(str, enum.Enum):
    """
    The type of relationship that this document has with anther document.
    """

    REPLACES = "replaces"
    TRANSFORMS = "transforms"
    SIGNS = "signs"
    APPENDS = "appends"

    def visit(
        self,
        replaces: typing.Callable[[], T_Result],
        transforms: typing.Callable[[], T_Result],
        signs: typing.Callable[[], T_Result],
        appends: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DocumentReferenceRelatesToCode.REPLACES:
            return replaces()
        if self is DocumentReferenceRelatesToCode.TRANSFORMS:
            return transforms()
        if self is DocumentReferenceRelatesToCode.SIGNS:
            return signs()
        if self is DocumentReferenceRelatesToCode.APPENDS:
            return appends()
