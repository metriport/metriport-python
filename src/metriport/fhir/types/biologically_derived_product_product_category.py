# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class BiologicallyDerivedProductProductCategory(str, enum.Enum):
    """
    Broad category of this product.
    """

    ORGAN = "organ"
    TISSUE = "tissue"
    FLUID = "fluid"
    CELLS = "cells"
    BIOLOGICAL_AGENT = "biologicalAgent"

    def visit(
        self,
        organ: typing.Callable[[], T_Result],
        tissue: typing.Callable[[], T_Result],
        fluid: typing.Callable[[], T_Result],
        cells: typing.Callable[[], T_Result],
        biological_agent: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is BiologicallyDerivedProductProductCategory.ORGAN:
            return organ()
        if self is BiologicallyDerivedProductProductCategory.TISSUE:
            return tissue()
        if self is BiologicallyDerivedProductProductCategory.FLUID:
            return fluid()
        if self is BiologicallyDerivedProductProductCategory.CELLS:
            return cells()
        if self is BiologicallyDerivedProductProductCategory.BIOLOGICAL_AGENT:
            return biological_agent()
