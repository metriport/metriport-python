# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AuditEventAction(str, enum.Enum):
    """
    Indicator for type of action performed during the event that generated the audit.
    """

    C = "C"
    R = "R"
    U = "U"
    D = "D"
    E = "E"

    def visit(
        self,
        c: typing.Callable[[], T_Result],
        r: typing.Callable[[], T_Result],
        u: typing.Callable[[], T_Result],
        d: typing.Callable[[], T_Result],
        e: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AuditEventAction.C:
            return c()
        if self is AuditEventAction.R:
            return r()
        if self is AuditEventAction.U:
            return u()
        if self is AuditEventAction.D:
            return d()
        if self is AuditEventAction.E:
            return e()
