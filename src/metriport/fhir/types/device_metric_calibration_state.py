# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DeviceMetricCalibrationState(str, enum.Enum):
    """
    Describes the state of the calibration.
    """

    NOT_CALIBRATED = "not-calibrated"
    CALIBRATION_REQUIRED = "calibration-required"
    CALIBRATED = "calibrated"
    UNSPECIFIED = "unspecified"

    def visit(
        self,
        not_calibrated: typing.Callable[[], T_Result],
        calibration_required: typing.Callable[[], T_Result],
        calibrated: typing.Callable[[], T_Result],
        unspecified: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DeviceMetricCalibrationState.NOT_CALIBRATED:
            return not_calibrated()
        if self is DeviceMetricCalibrationState.CALIBRATION_REQUIRED:
            return calibration_required()
        if self is DeviceMetricCalibrationState.CALIBRATED:
            return calibrated()
        if self is DeviceMetricCalibrationState.UNSPECIFIED:
            return unspecified()
